@model BusinessLogicLayer.Dtos.CartDtos.CartAndListCartItemViewModel

<style>
    /* Tùy chỉnh SweetAlert2 để đồng bộ với giao diện website */
    .swal2-popup {
        font-family: 'Lato', sans-serif;
        background: #f4f4f4;
        color: #595959;
        border: 1px solid #e5e5e5;
        border-radius: 8px;
    }

    .swal2-title {
        color: #333;
        font-size: 18px;
        font-weight: 700;
    }

    .swal2-content {
        color: #595959;
        font-size: 16px;
    }

    .swal2-confirm {
        background-color: #cda557 !important;
        color: #fff !important;
        border-radius: 3px !important;
        padding: 10px 20px !important;
        font-size: 12px !important;
        text-transform: uppercase !important;
        transition: all 0.3s ease-in !important;
    }

    .swal2-cancel {
        background-color: #595959 !important;
        color: #fff !important;
        border-radius: 3px !important;
        padding: 10px 20px !important;
        font-size: 12px !important;
        text-transform: uppercase !important;
        transition: all 0.3s ease-in !important;
    }

    .swal2-confirm:hover {
        background-color: #d5b473 !important;
    }

    .swal2-cancel:hover {
        background-color: #333 !important;
    }

    .swal2-icon.swal2-warning {
        color: #cda557 !important;
        border-color: #cda557 !important;
    }

    .swal2-icon.swal2-error {
        color: #ea3a3c !important;
        border-color: #ea3a3c !important;
    }
</style>

<body class="template-color-1">
    <div class="main-wrapper">
        <div class="breadcrumb-area">
            <div class="container">
                <div class="breadcrumb-content">
                    <h2>Giỏ Hàng</h2>
                    <ul>
                        <li><a href="/Product/ProductList">Danh sách</a></li>
                        <li class="active">Giỏ Hàng</li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="hiraola-cart-area">
            <div class="container">
                @if (TempData["StockWarning"] != null)
                {
                    <div class="alert alert-warning" id="stock-warning">
                        @TempData["StockWarning"]
                    </div>
                }
                @if (TempData["Warning"] != null)
                {
                    <div class="alert alert-warning">
                        @TempData["Warning"]
                    </div>
                }
                <div class="row">
                    <div class="col-12">
                        <form action="javascript:void(0)">
                            <div class="table-content table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th class="hiraola-product-remove">Xóa</th>
                                            <th class="hiraola-product-thumbnail">Ảnh</th>
                                            <th class="cart-product-name">Sản Phẩm</th>
                                            <th class="hiraola-product-price">Giá</th>
                                            <th class="hiraola-product-quantity">Số Lượng</th>
                                            <th class="hiraola-product-subtotal">Tổng</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.cartItemsViewModel != null && Model.cartItemsViewModel.Any())
                                        {
                                            foreach (var item in Model.cartItemsViewModel)
                                            {
                                                <tr data-design-id="@item.DesignId">
                                                    <td class="hiraola-product-remove">
                                                        <a href="javascript:void(0)" onclick="removeFromCart('@item.DesignId')">
                                                            <i class="fa fa-trash" title="Remove"></i>
                                                        </a>
                                                    </td>
                                                    <td class="hiraola-product-thumbnail">
                                                        <a href="javascript:void(0)">
                                                            <img src="@item.Design.FirstImage.ImageUrl" alt="Hiraola's Cart Thumbnail" style="max-width:30%">
                                                        </a>
                                                    </td>
                                                    <td class="hiraola-product-name">
                                                        <a href="/Product/ProductDetail?designId=@item.DesignId" title="Xem chi tiết sản phẩm">@item.Design.DesignName</a>
                                                    </td>
                                                    <td class="hiraola-product-price">
                                                        <span class="amount">
                                                            @String.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:N0}", item.Price) ₫
                                                        </span>
                                                    </td>
                                                    <td class="quantity">
                                                        <label>Số Lượng</label>
                                                        <div class="cart-plus-minus">
                                                            <input class="cart-plus-minus-box"
                                                                   value="@item.Quantity"
                                                                   type="text"
                                                                   data-design-id="@item.DesignId"
                                                                   data-price="@item.Price"
                                                                   data-stock-quantity="@item.Design.StockQuantity">
                                                            <div class="dec qtybutton"><i class="fa fa-angle-down"></i></div>
                                                            <div class="inc qtybutton"><i class="fa fa-angle-up"></i></div>
                                                        </div>
                                                    </td>
                                                    <td class="product-subtotal">
                                                        <span class="amount" data-subtotal="@((item.Quantity * item.Price))">
                                                            @String.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:N0}", (item.Quantity) * (item.Price)) ₫
                                                        </span>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="6">Giỏ hàng trống</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="row">
                                <div class="col-md-5 ml-auto">
                                    <div class="cart-page-total">
                                        <h2>Tất Cả</h2>
                                        <ul>
                                            <li>
                                                Tổng
                                                <span id="cart-total">
                                                    @String.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:N0}", Model.CartViewModel?.Total) ₫
                                                </span>
                                            </li>
                                        </ul>
                                        @if (Model.cartItemsViewModel != null && Model.cartItemsViewModel.Any())
                                        {
                                            <a href="/Checkout/PlaceOrder">Đặt Hàng</a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Hàm debounce để giới hạn tần suất gọi hàm
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        $(document).ready(function () {
            let isUpdating = false;

            // Hiển thị thông báo StockWarning từ TempData bằng SweetAlert2
            var stockWarning = $('#stock-warning').text().trim();
            if (stockWarning) {
                Swal.fire({
                    title: 'Cảnh báo',
                    text: stockWarning,
                    icon: 'warning',
                    confirmButtonText: 'Đóng'
                });
            }

            // Hàm cập nhật tổng giá trị giỏ hàng từ dữ liệu backend
            function updateCartTotal(total) {
                var formattedTotal = total.toLocaleString('vi-VN', { minimumFractionDigits: 0 });
                $('#cart-total').text(formattedTotal + ' ₫');
            }

                    // Hàm cập nhật số lượng giỏ hàng
        function updateCartCount() {
            $.ajax({
                url: '/Cart/GetCartItemCount',
                type: 'GET',
                success: function (response) {
                    if (response.success) {
                        // Cập nhật số lượng trên icon giỏ hàng
                        $('#cart-count').text(response.count);
                        console.log('Cập nhật số lượng giỏ hàng:', response.count);
                    } else {
                        // Nếu có lỗi, đặt số lượng về 0 hoặc xử lý phù hợp
                        $('#cart-count').text(0);
                        console.error('Lỗi khi lấy số lượng giỏ hàng:', response.message);
                    }
                },
                error: function () {
                    $('#cart-count').text(0);
                    console.error('Lỗi AJAX khi cập nhật số lượng giỏ hàng');
                }
            });
        }

            // Hàm kiểm tra tồn kho định kỳ
            function checkStockStatus() {
                $('.table tbody tr').each(function () {
                    var $row = $(this);
                    var designId = $row.data('design-id');
                    var $input = $row.find('.cart-plus-minus-box');
                    var currentQuantity = parseInt($input.val()) || 1;

                    $.ajax({
                        url: '/Cart/CheckStockStatus',
                        type: 'GET',
                        data: { designId: designId },
                        success: function (response) {
                            if (response.success) {
                                if (response.stockQuantity === 0) {
                                    // Xóa sản phẩm nếu hết hàng
                                    $row.remove();
                                    Swal.fire({
                                        title: 'Cảnh báo',
                                        text: `Sản phẩm đã hết hàng và được xóa khỏi giỏ hàng.`,
                                        icon: 'warning',
                                        confirmButtonText: 'Đóng'
                                    });
                                    updateCart();
                                } else if (response.stockQuantity < currentQuantity) {
                                    // Giảm số lượng nếu vượt tồn kho
                                    $input.val(response.stockQuantity);
                                    updateQuantity(designId, response.stockQuantity, $input);
                                    Swal.fire({
                                        title: 'Cảnh báo',
                                        text: `Số lượng sản phẩm đã được điều chỉnh còn ${response.stockQuantity} do tồn kho thay đổi.`,
                                        icon: 'warning',
                                        confirmButtonText: 'Đóng'
                                    });
                                }
                            }
                        }
                    });
                });
            }

            // Hàm cập nhật giỏ hàng sau khi xóa hoặc điều chỉnh
            function updateCart() {
                $.ajax({
                    url: '/Cart/UpdateCart',
                    type: 'POST',
                    data: { designId: null, quantity: 0 }, // Trigger cập nhật tổng
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            updateCartTotal(response.cartTotal);
                            updateCartCount();
                            if ($('.table tbody tr').length === 0) {
                                $('.table tbody').append('<tr><td colspan="6">Giỏ hàng trống</td></tr>');
                                $('.cart-page-total a').remove();
                            }
                        }
                    }
                });
            }

            // Gắn sự kiện click cho nút tăng/giảm
            $('.qtybutton').off('click').on('click', function () {
                if (isUpdating) return;

                var $button = $(this);
                var $input = $button.parent().find('input');
                var oldValue = parseInt($input.val()) || 1;
                var stockQuantity = parseInt($input.data('stock-quantity')) || Infinity;
                var newVal;

                if ($button.hasClass('inc')) {
                    newVal = oldValue + 1;
                } else {
                    newVal = oldValue > 1 ? oldValue - 1 : 1;
                }

                if (newVal > stockQuantity) {
                    Swal.fire({
                        title: 'Thông Báo',
                        text: `Chỉ còn ${stockQuantity} sản phẩm trong kho.`,
                        icon: 'warning',
                        confirmButtonText: 'Đóng'
                    });
                    return;
                }

                $input.val(newVal);
                $input.data('original-value', oldValue);
                updateQuantity($input.data('design-id'), newVal, $input);
            });

            // Gắn sự kiện change cho input với debounce
            $('.cart-plus-minus-box').off('change').on('change', debounce(function () {
                if (isUpdating) return;

                var $input = $(this);
                var quantity = parseInt($input.val()) || 1;
                var stockQuantity = parseInt($input.data('stock-quantity')) || Infinity;
                var oldValue = parseInt($input.data('original-value')) || 1;

                if (isNaN(quantity) || quantity <= 0) {
                    Swal.fire({
                        title: 'Thông Báo',
                        text: 'Số lượng phải lớn hơn 0.',
                        icon: 'warning',
                        confirmButtonText: 'Đóng'
                    });
                    $input.val(oldValue);
                    return;
                }

                if (quantity > stockQuantity) {
                    Swal.fire({
                        title: 'Thông Báo',
                        text: `Chỉ còn ${stockQuantity} sản phẩm trong kho.`,
                        icon: 'warning',
                        confirmButtonText: 'Đóng'
                    });
                    $input.val(oldValue);
                    return;
                }

                $input.data('original-value', quantity);
                updateQuantity($input.data('design-id'), quantity, $input);
            }, 300));

            // Hàm cập nhật số lượng
            function updateQuantity(designId, quantity, $input) {
                isUpdating = true;
                var price = parseFloat($input.data('price'));

                $.ajax({
                    url: '/Cart/UpdateCart',
                    type: 'POST',
                    data: {
                        designId: designId,
                        quantity: quantity
                    },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            var subtotal = quantity * price;
                            var formattedSubtotal = subtotal.toLocaleString('vi-VN', { minimumFractionDigits: 0 });

                            $input.closest('tr').find('.product-subtotal .amount')
                                .text(formattedSubtotal + ' ₫')
                                .data('subtotal', subtotal);

                            updateCartTotal(response.cartTotal);
                            updateCartCount();
                            $input.data('stock-quantity', response.stockQuantity || $input.data('stock-quantity'));
                        } else {
                            Swal.fire({
                                title: 'Lỗi',
                                text: response.message,
                                icon: 'error',
                                confirmButtonText: 'Đóng'
                            });
                            var originalValue = parseInt($input.data('original-value')) || 1;
                            $input.val(originalValue);
                            var originalSubtotal = originalValue * price;
                            var formattedOriginalSubtotal = originalSubtotal.toLocaleString('vi-VN', { minimumFractionDigits: 0 });
                            $input.closest('tr').find('.product-subtotal .amount')
                                .text(formattedOriginalSubtotal + ' ₫')
                                .data('subtotal', originalSubtotal);
                            updateCartTotal(response.cartTotal || 0);
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: 'Thông Báo',
                            text: 'Có lỗi xảy ra khi cập nhật số lượng.',
                            icon: 'warning',
                            confirmButtonText: 'Đóng'
                        });
                        var originalValue = parseInt($input.data('original-value')) || 1;
                        $input.val(originalValue);
                        var originalSubtotal = originalValue * price;
                        var formattedOriginalSubtotal = originalSubtotal.toLocaleString('vi-VN', { minimumFractionDigits: 0 });
                        $input.closest('tr').find('.product-subtotal .amount')
                            .text(formattedOriginalSubtotal + ' ₫')
                            .data('subtotal', originalSubtotal);
                        updateCartTotal(0);
                    },
                    complete: function () {
                        isUpdating = false;
                    }
                });
            }

            // Hàm xóa sản phẩm khỏi giỏ hàng
            window.removeFromCart = function(designId) {
                Swal.fire({
                    title: 'Xác nhận xóa',
                    text: 'Bạn có chắc muốn xóa sản phẩm này khỏi giỏ hàng không?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Xóa',
                    cancelButtonText: 'Hủy',
                    customClass: {
                        confirmButton: 'swal2-confirm',
                        cancelButton: 'swal2-cancel'
                    },
                    showLoaderOnConfirm: true,
                    preConfirm: () => {
                        return $.ajax({
                            url: '/Cart/UpdateCart',
                            type: 'POST',
                            data: {
                                designId: designId,
                                quantity: 0
                            },
                            headers: {
                                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                            }
                        }).then(response => {
                            if (!response.success) {
                                throw new Error(response.message);
                            }
                            return response;
                        }).catch(error => {
                            Swal.showValidationMessage(`Lỗi: ${error.message || 'Có lỗi xảy ra khi xóa sản phẩm.'}`);
                        });
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        $(`tr[data-design-id="${designId}"]`).remove();
                        updateCartTotal(result.value.cartTotal);
                        updateCartCount();
                        if ($('.table tbody tr').length === 0) {
                            $('.table tbody').append('<tr><td colspan="6">Giỏ hàng trống</td></tr>');
                            $('.cart-page-total a').remove();
                        }
                        Swal.fire({
                            title: 'Thành công',
                            text: 'Sản phẩm đã được xóa khỏi giỏ hàng.',
                            icon: 'success',
                            confirmButtonText: 'Đóng'
                        });
                    }
                });
            }

            // Kiểm tra tồn kho định kỳ (mỗi 30 giây)
            setInterval(checkStockStatus, 30000);
            // Kiểm tra ngay khi tải trang
            checkStockStatus();
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>